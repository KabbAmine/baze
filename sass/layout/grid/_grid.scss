/* -------------------------- *\
 *			Grid
 \* -------------------------- */


// -------------------------- //
//			Variables
// -------------------------- //

$l_grid_gutter: $gutter!default;
$l_grid_number_columns: 12!default;

$l_medium: 640px!default;
$l_large: 1040px!default;

// -------------------------- //
//		Extends
// -------------------------- //

%col-properties {
	min-height: 1px;
	float: left;
	position: relative;
}

// -------------------------- //
//			Mixins
// -------------------------- //

@mixin responsive-columns($type) {
	@for $cl from 1 through $l_grid_number_columns {
		.col-#{$type}-#{$cl} {
			width: ($cl / $l_grid_number_columns) * 100%;
			padding: 0 ($l_grid_gutter / 2);
		}
		.ft-col-#{$type}-#{$cl} {
			width: ($cl / $l_grid_number_columns) * 100%;
			padding: 0 ($l_grid_gutter / 2) 0 0;
		}
		.lt-col-#{$type}-#{$cl} {
			width: ($cl / $l_grid_number_columns) * 100%;
			padding: 0 0 0 ($l_grid_gutter / 2);
		}
		.fl-col-#{$type}-#{$cl} {
			width: ($cl / $l_grid_number_columns) * 100%;
			padding: 0;
		}
	}
	.col-#{$type}-center {
		margin-right: auto;
		margin-left: auto;
		float: none;
	}
}

@mixin set-col-properties($type, $l_grid_number_columns: $l_grid_number_columns) {
	@for $cl from 1 through $l_grid_number_columns {
		.#{$type}-s-#{$cl} { @extend %col-properties; }
		.#{$type}-l-#{$cl} { @extend %col-properties; }
		.#{$type}-m-#{$cl} { @extend %col-properties; }
	}
}

// -------------------------- //
//			Grid
// -------------------------- //

.row {
	padding: 0 ($l_grid_gutter / -2);
	clear: both;

	@include clearfix();
}

@include set-col-properties('col');
@include set-col-properties('ft-col');
@include set-col-properties('lt-col');
@include set-col-properties('fl-col');

@include responsive-columns('s');
@media only screen and (min-width: $l_medium) { @include responsive-columns('m'); }
@media only screen and (min-width: $l_large) { @include responsive-columns('l'); }
